=for stopwords
bmalloc bcalloc brealloc bstrdup Allbery

=head1 NAME

bmalloc, bcalloc, brealloc, bstrdup - Checked memory allocation functions

=head1 SYNOPSIS

#include <tap/basic.h>

void *B<bmalloc>(size_t I<size>);

void *B<bcalloc>(size_t I<n>, size_t I<size>);

void *B<brealloc>(void *I<ptr>, size_t I<size>);

char *B<bstrdup>(const char *I<string>);

=head1 DESCRIPTION

These functions are wrappers around the standard C memory allocation
functions.  They each check whether the memory allocation succeeded,
returning the newly allocated memory on success and calling sysbail() on
failure.  They're intended for use inside TAP test cases where the test
case should be aborted if memory allocation fails, and avoid the need to
check each allocation as it's performed.

=head1 RETURN VALUE

bmalloc() and bcalloc() return a pointer to the newly allocated memory,
and brealloc() a pointer to the reallocated memory (which may or may not
be the same as I<ptr>), identical to their standard C counterparts.
bstrdup() returns a pointer to a newly allocated copy of I<string>.  None
of these functions may return NULL; if memory allocation fails, they will
abort the program.

=head1 CAVEATS

bmalloc() and bcalloc() do not guard against allocating 0 bytes, just
calling the underlying C library functions, and may return NULL in that
case on some platforms.

=head1 SEE ALSO

calloc(3), malloc(3), realloc(3), strdup(3), sysbail(3)

The current version of the C TAP Harness library is available from its web
page at L<http://www.eyrie.org/~eagle/software/c-tap-harness/>.

=head1 AUTHOR

Russ Allbery <rra@stanford.edu>

=cut
