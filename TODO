                         C TAP Harness To-Do List

Protocol:

 * Report the text after the "# skip" directive as the reason for the
   skipping of the test.  We should accumulate reasons and the count of
   tests that had that reason and report how many tests were skipped for
   each reason.

 * Ignore an initial "TAP version <version>" string in the output for
   compliance with what's apparently the new TAP format.

Shell:

 * ok_program merges stdout and stderr, which could cause test problems
   when output isn't flushed or when the difference is important.  Add
   a new function that keeps the streams separate and specifies what's
   expected on each stream.

Reporting:

 * Report passing todo tests as something other than simple failed tests.

 * Add an option to report test results in color.

Extra Harness Features:

 * Save log files for the output of each test, either by default or via an
   option, similar to the new Automake TAP test support.

 * Support a verbose mode that shows the result of each test as it's
   running instead of just the test counts.

 * Support displaying diagnostic lines (lines beginning with "#") in a
   verbose mode.

 * Support running selected tests under fakeroot, probably by adding a
   parameter in the TESTS file after the test name.

 * Support automatically finding test cases under a particular directory
   similar to how prove finds tests, without needing a TESTS file.  Allow
   directories or test cases to be given on the command line.

 * Support recursing into directories and running all tests found inside.

 * In test lists and with the -o option, allow the full name of the test
   to be specified rather than requiring it be given without -t or .t and
   always adding the suffix.

 * Support -D/--dry-run to list the tests that would be run.  (Mostly only
   useful after passing directories and recursion are implemented.)

 * Support comments in test lists.

 * Use C_TAP_SOURCE and C_TAP_BUILD instead of SOURCE and BUILD to avoid
   the generic environment variables that may conflict with other uses of
   the same variables.

Documentation:

 * Move the integration documentation in README into a separate file in
   docs, probably docs/autotools-integration, and clarify in README what
   documentation to read first.
