                    User-Visible C TAP Harness Changes

C TAP Harness 1.3 (unreleased)

    Add API documentation for the functions provided by the basic TAP C
    library.  The documentation is in POD and *roff format in docs/api and
    installed as man pages in the (generally unused) case of make install.

    Add docs/writing-tests, which provides some basic instructions for how
    to write TAP tests in Perl, C, and shell using the facilities provided
    by C TAP Harness.  This document is suitable for inclusion in packages
    that use C TAP Harness as instructions for contributors.

    Add an okv() function to the C TAP library.  This is the same as ok()
    but takes the test description as a va_list to make it easier to reuse
    the reporting infrastructure in other tests.

C TAP Harness 1.2 (2010-04-13)

    Support giving the plan at any point in the test output rather than
    requiring it be first.  The TAP protocol permits giving the plan last
    instead of first, but since it's just as easy to support providing the
    plan in the middle of the test output, allow that as well.

    Add support for lazy planning to the basic TAP library.  Instead of
    calling plan at the start of the test, call plan_lazy instead, which
    doesn't require specifying a test count.  Then, the plan will
    automatically be printed based on the last test number at the end of
    the program.  This is not the recommended approach for writing tests
    since, should the test program exit in the middle for some reason,
    everything will appear to succeed.  But it can save time in writing
    tests quickly and allows for dynamic numbers of tests.

    Add diag and sysdiag functions to the basic TAP library, which output
    diagnostics to standard error preceded by the protocol-required #
    character.

    Clean up data types in the basic C TAP library.  Test numbers and
    counts are now unsigned long, and ok_int compares longs.

    Add the GCC nonnull attribute to the bail functions in the TAP
    library.

C TAP Harness 1.1 (2009-08-15)

    Set an exit handler in libtap that prints a summary of the test
    results at the end of a test script, similar to Perl's Test::More.

    When looking for 0..1 # skip plan lines indicating the whole test case
    should be skipped, correctly compare "skip" case-insensitively.  This
    fixes interoperability with Perl's Test::More.

    Consume all output from the test case before closing its file
    descriptor, even if the case is aborted due to bailing out or sending
    an invalid test number.  This prevents tests from spuriously dying
    with SIGPIPE.

    Enable Automake silent rules.  For a quieter build, pass the
    --enable-silent-rules option to configure or build with make V=0.

C TAP Harness 1.0 (2009-05-21)

    Initial public release based on the version of runtests.c and the
    libtest library that shipped with remctl 2.13.  The changes below are
    relative to that version.

    Set the SOURCE and BUILD environment variables when running tests to
    the roots of the source and build test directories if set at compile
    time or via the -s and -b command-line options to runtests.

    Search for test programs first in the current directory and then in
    the build and source directories, in that order, as specified by
    SOURCE and BUILD or by the -s and -b options.  This allows some tests
    to be compiled and some shipped with the package and merged together
    at run time by runtests, even if the build directory is not the source
    directory.

    Support running a single test program with the -o command-line option.
    This is mostly interesting to take advantage of the environment
    variables and test searching algorithm described above.

    Add support for 0..1 # skip <reason> plan lines, indicating that the
    entire test case should be skipped.

    Add support for aborting a test case with "Bail out!" and reporting
    the reason given on that line.

    Add support for omitting the test number from an "ok" or "not ok"
    line, in which case the number is assumed to be one more than the
    previous number.

    Add support for todo tests, which are recorded as skipped if failing
    and failed if they succeed unexpectedly.

    Omitting the space after "ok" or "not ok" line is now supported, and a
    test number of 0 now results in an error.

    Recognize skip directives regardless of case.

    Change the reporting of reasons to abort the test case to use ABORTED
    and the abort reason in parentheses for more consistent output.

    Rename test_init() to plan() and ok_int(), ok_double(), and
    ok_string() to is_int(), is_double(), and is_string() in the C TAP
    library to more closely match the function names in Perl's test
    modules.

    Add is_hex() C TAP library function to compare two unsigned longs and
    print mismatches in hex.

    Change all C library functions to take a test description
    (printf-style) and to no longer take the test number.  Instead, keep a
    static count of the current test number.

    Add bail() and sysbail() C TAP library functions to bail out with the
    right magic output string.

    Add skip_all() C TAP library function to skip all tests and exit.

    Stop exporting the printcount interface in the shell version of the
    TAP library.  Instead, provide plan, skip_all, ok, skip, ok_block,
    skip_block, ok_program, and bail shell functions, similar to the C
    library interface, with the ok* functions taking a test description as
    the first argument.

    Show mismatch output from the is_*() functions before the "not ok"
    line instead of after it.

    Add the initial "1.." to plan() output for better TAP compliance.

    Support either "-t" or ".t" as the ending of test cases.

    Remove the dependency on both config.h and the general portability
    framework and instead include the necessary C headers directly.  This
    requires ANSI C.

    Remove the functions from libtap that assume libutil from rra-c-util.
    Those library functions will be provided by that package.
